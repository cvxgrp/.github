#  Copyright 2023 Stanford University Convex Optimization Group
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
name: Build Package
description: "Build Python package and publish artifacts"

inputs:
  working-directory:
    description: 'Directory where the Python project is located'
    required: false
    default: '.'
  python-version:
    description: 'The Python we shall use'
    required: false
    default: '3.12'

runs:
  using: "composite"

  steps:
    - name: Checkout [${{ github.repository }}]
      uses: actions/checkout@v4

    # Install UV
    - name: Install uv
      shell: bash
      run: |
        set -eo pipefail
        if [ "$RUNNER_OS" == "Linux" ] || [ "$RUNNER_OS" == "macOS" ]; then
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          export PATH="$HOME/.local/bin:$PATH"
        elif [ "$RUNNER_OS" == "Windows" ]; then
          pwsh -Command "irm https://astral.sh/uv/install.ps1 | iex"
          WINDOWS_UV_PATH="C:\\Users\\runneradmin\\.local\\bin"
          echo "$WINDOWS_UV_PATH" >> $GITHUB_PATH
          export PATH="$WINDOWS_UV_PATH:$PATH"
          # Reload PATH in the current shell for Windows
          eval "$(echo 'export PATH="'"$WINDOWS_UV_PATH"':$PATH"')"
        else
          echo "Unsupported operating system: $RUNNER_OS"
          exit 1
        fi
        # Small delay to allow PATH to update
        sleep 2
        # Print PATH for debugging
        echo "Current PATH: $PATH"
        uv --version
        uv --help > /dev/null

    - name: Set up Python environment with uv
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        # Create virtual environment with uv
        uv venv --python ${{ inputs.python-version }}
        # Add venv to PATH for the current session
        echo ".venv/bin" >> $GITHUB_PATH
        # Sync environment (install dependencies)
        uv sync --all-extras --dev --frozen  # Install all dependencies (including dev dependencies)

    - name: Activate the environment and ensure pip is installed
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        # Activate the virtual environment
        # source .venv/bin/activate
        # Ensure pip is installed and up-to-date
        which python
        python -m ensurepip --upgrade
        # Confirm python and pip are from the virtual environment
        which python
        which pip
        python -m pip --version
