name: "Bump version and create release"
description: "Bumps version, creates a tag, and publishes a release."

inputs:
  github_token:
    description: "GitHub token for authentication"
    required: true
  build_package:
    description: 'Whether to build and include package artifacts in the release'
    required: false
    default: 'true'

outputs:
  tag:
    description: 'A new tag'

runs:
  #outputs:
  #  new_tag: ${{ steps.tag_version.outputs.new_tag }}

  using: "composite"
  steps:
    # -----------------------------------------------------------------------------
    # Step 1: Checkout the repository
    # -----------------------------------------------------------------------------
    - name: Checkout [${{ github.repository }}]
      uses: actions/checkout@v4

    # -----------------------------------------------------------------------------
    # Step 2a: Bump version and tag
    # -----------------------------------------------------------------------------
    - name: Bump version and tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.2
      with:
        github_token: ${{ inputs.github_token }}

    # -----------------------------------------------------------------------------
    # Step 2b: Set output for new_tag and environment variable
    # -----------------------------------------------------------------------------
    - name: Set new_tag output and environment variable
      shell: bash
      run: |
        NEW_TAG="${{ steps.tag_version.outputs.new_tag }}"
        echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV  # Set the environment variable for later steps
        echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT  # Set the output for downstream jobs
        echo "::set-output name=tag::$NEW_TAG"
    # -----------------------------------------------------------------------------
    # Step 3: Install dependencies (hatch for packaging)
    # -----------------------------------------------------------------------------
    - name: Install dependencies
      if: inputs.build_package == 'true'
      shell: bash
      run: |
        echo "Tag from previous step: $NEW_TAG"
        python -m pip install --upgrade hatch

    # -----------------------------------------------------------------------------
    # Step 4: Update version in pyproject.toml
    # -----------------------------------------------------------------------------
    - name: Update version in pyproject.toml
      if: inputs.build_package == 'true'
      shell: bash
      run: |
        echo "Updating version to $NEW_TAG"
        sed -i "s/0.0.0/$NEW_TAG/" pyproject.toml

    # -----------------------------------------------------------------------------
    # Step 5: Build the package
    # -----------------------------------------------------------------------------
    - name: Build package
      if: inputs.build_package == 'true'
      shell: bash
      run: |
        echo "Building package for version: $NEW_TAG"
        hatch build

    # -----------------------------------------------------------------------------
    # Step 6: Upload build artifacts
    # -----------------------------------------------------------------------------
    - name: Upload distribution artifacts
      if: inputs.build_package == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
        retention-days: 1

    # -----------------------------------------------------------------------------
    # Step 7: Create GitHub release
    # -----------------------------------------------------------------------------
    - name: Create GitHub release with artifacts
      if: inputs.build_package == 'true'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: $NEW_TAG
        generate_release_notes: true
        files: dist/*

    - name: Create GitHub release without artifacts
      if: inputs.build_package != 'true'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: $NEW_TAG
        generate_release_notes: true

    - name: Debug Output Tag
      shell: bash
      run: |
          echo "DEBUG: ${{ steps.tag_version.outputs.new_tag }}"
