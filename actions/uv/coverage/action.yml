#  Copyright 2023 Stanford University Convex Optimization Group
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
name: Measure Test Coverage
description: "Run tests with comprehensive coverage reporting"

inputs:
  source-folder:
    description: 'Source folder to measure coverage for'
    type: string
    required: false
    default: 'cvx'
  working-directory:
    description: 'Directory where the Python project is located'
    required: false
    default: '.'
  python-version:
    description: 'Python version to use'
    required: false
    default: '3.12'

runs:
  using: "composite"
  steps:
    # Install uv
    - name: Install uv
      uses: astral-sh/setup-uv@887a942a15af3a7626099df99e897a18d9e5ab3a
      with:
        python-version: ${{ inputs.python-version }}

    - name: Set up Python environment with uv
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        # Create venv
        uv venv
        # Add venv to PATH
        echo ".venv/bin" >> $GITHUB_PATH
        uv sync --all-extras --dev --frozen

    - name: Run tests with coverage
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        # Install coverage tools separately to ensure they don't conflict
        uv pip install --no-cache-dir pytest pytest-cov pytest-html pytest-random-order

        # Create output directories
        mkdir -p artifacts/tests/{html-report,coverage,html-coverage}

        # Run pytest with coverage reporting
        uv run pytest \
          --cov=${{ inputs.source-folder }} \
          --random-order \
          --verbose \
          --html=artifacts/tests/html-report/report.html \
          --cov-report=term \
          --cov-report=xml:artifacts/tests/coverage/coverage.xml \
          --cov-report=json:artifacts/tests/coverage/coverage.json \
          --cov-report=lcov:artifacts/tests/coverage/coverage.info \
          --cov-report=html:artifacts/tests/html-coverage \
          tests/

        # Remove .gitignore for gh-pages compatibility
        rm -f artifacts/tests/html-coverage/.gitignore

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: tests
        path: ${{ inputs.working-directory }}/artifacts/tests
        retention-days: 1
