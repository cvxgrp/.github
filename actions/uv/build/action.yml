#  Copyright 2023 Stanford University Convex Optimization Group
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
name: Build Package
description: "Build Python package and publish artifacts"

inputs:
  python-version:
    description: 'Python version to use for building'
    type: string
    required: false
    default: '3.12'
  working-directory:
    description: 'Directory where the Python project is located'
    required: false
    default: '.'

runs:
  using: "composite"

  steps:
    - name: Install uv
      shell: bash
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Set up Python environment with uv
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        # Create venv with specific Python version
        uv venv --python ${{ inputs.python-version }}
        # Add venv to PATH
        echo ".venv/bin" >> $GITHUB_PATH

    - name: Install project dependencies
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        uv python install ${{ inputs.python-version }}
        uv sync --all-extras --dev --frozen


    - name: Build package
      working-directory: ${{ inputs.working-directory }}
      shell: bash
      run: |
        # Update version in pyproject.toml from git tag
        sed -i -e "s/0.0.0/${GITHUB_REF#refs/*/}/" pyproject.toml
        # Build the package
        uv build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: ${{ inputs.working-directory }}/dist
        retention-days: 1
